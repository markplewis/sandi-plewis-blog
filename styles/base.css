/* Global styles */
/* See: https://nextjs.org/docs/basic-features/built-in-css-support */

/*
Fallback fonts were generated here:
https://deploy-preview-15--upbeat-shirley-608546.netlify.app/perfect-ish-font-fallback/
See also: https://www.smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/
*/
@font-face {
  font-family: "Open Sans fallback";
  size-adjust: 105.49999999999997%;
  ascent-override: 103%;
  src: local("Arial");
}
@font-face {
  font-family: "Literata fallback";
  size-adjust: 117.49999999999997%;
  ascent-override: 103%;
  src: local("Times New Roman");
}
:root {
  --base-background-color: #fff;
  --base-font-color: #333;
  --base-font-family: "Open Sans", "Open Sans fallback", Verdana, sans-serif;
  --heading-font-family: "Literata", "Literata fallback", serif;
  --focus-outline-color: steelblue;
  --column-margin: 22px;
}
@media (min-width: 768px) {
  :root {
    --column-margin: 44px;
  }
}
@media (min-width: 1600px) {
  :root {
    --column-margin: 88px;
  }
}
* {
  line-height: inherit; /* Inherit value from modern-normalize.css */
}
body {
  font-size: 100%; /* Default is 16px in most browsers */
  font-family: var(--base-font-family);
  line-height: 1.5;
  color: var(--base-font-color);
  background-color: var(--base-background-color);
}
main {
  width: 100%;
  /* overflow-x: hidden; */
  overflow: hidden;
  display: grid;
  /* See: https://webkit.org/blog/7929/designing-websites-for-iphone-x/ */
  /*
  TODO: viewport-fit=cover doesn't seem to be working in Chrome for iOS:
  https://bugs.chromium.org/p/chromium/issues/detail?id=1150075
  https://stackoverflow.com/questions/61527166/ios-chrome-not-respecting-safe-area-inset-for-notch
  */
  grid-template-columns:
    max(var(--column-margin), env(safe-area-inset-left))
    1fr
    max(var(--column-margin), env(safe-area-inset-right));
  position: relative;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--heading-font-family);
}
h1 {
  font-size: var(--font-size-1);
}
h2 {
  font-size: var(--font-size-2);
}
h3 {
  font-size: var(--font-size-3);
}
h4 {
  font-size: var(--font-size-4);
}
h5 {
  font-size: var(--font-size-5);
}
h6 {
  font-size: var(--font-size-6);
}

/* @media (min-width: 600px) {
  :root {
    --base-background-color: goldenrod;
  }
} */

/* See https://css-tricks.com/links-inline-svg-staying-target-events/ */
a > svg,
button > svg {
  pointer-events: none;
}

/*
Note: We could use "box-shadow" instead of "outline", but focus rings won't display
correctly when an <a> wraps an <img> element, unless that <a> has "display: inline-block"
applied. "box-shadow" is nice because it automatically follows the contours of the element's
"border-radius", whereas "outline" does not (although there are plans to change this:
https://bugs.chromium.org/p/chromium/issues/detail?id=81556), but we've opted to use "outline"
in order to avoid having to apply "display: inline-block" to every <a> that wraps an <img>.
*/
:focus,
:hover:focus {
  outline: 2px solid var(--focus-outline-color);
  outline-offset: 0;
}

/* Utilities */
/* TODO: move these into a separate file? */

/*
Controversial "fix" for sub-pixel font rendering "problems" in various browsers
See: https://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/
See: https://github.com/google/fonts/issues/1170#issuecomment-691405519
Maybe we should use `text-rendering` instead?
https://css-tricks.com/almanac/properties/t/text-rendering/
*/
/*
.u-font-rendering-fix {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizelegibility;
}
*/

.u-button-appearance-none {
  cursor: pointer;
  border: none;
  background-color: transparent;
  appearance: none;
  display: block;
}

/*
Hide only visually, but have it available for screen readers.
Warning: elements containing focusable elements (e.g. links, buttons, etc.)
should not be hidden in this way, because sighted keyboard users will not be
able to see the focused element.
http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*/
.u-visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  /* TODO: Refactor this to avoid using clip, because it's deprecated */
  /* https://developer.mozilla.org/en-US/docs/Web/CSS/clip */
  clip: rect(0 0 0 0);
  border: 0;
}

.u-no-scroll--not-fixed {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.u-content-hidden main {
  display: none;
}

/* Hide visually and also from screen readers */
[hidden],
.u-hidden {
  display: none !important;
}

/*
Hide Google reCAPTCHA badge
See: https://developers.google.com/recaptcha/docs/faq#id-like-to-hide-the-recaptcha-badge.-what-is-allowed
*/
/* .grecaptcha-badge {
  visibility: hidden;
} */
